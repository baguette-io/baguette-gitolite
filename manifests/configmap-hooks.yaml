apiVersion: v1
kind: ConfigMap
metadata:
  name: baguette-git
  namespace: baguette
data:
  post-receive: |
      #!/usr/bin/python
      import json
      import os
      import sys
      import time
      import farine.exceptions
      import farine.rpc
      import farine.settings
      import sel


      def post_receive(from_commit, to_commit, branch):
          """
          Send a message in order to deploy the branch/tag.
          """
          sys.stdout = os.fdopen(sys.stdout.fileno(), 'w', 0)
          #1. Load frasage settings.
          farine.settings.load()
          #2. Retrieve the user and repo.
          git_repo = os.path.basename(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
          user = git_repo.split('.')[0]
          repo = git_repo.split('.')[1]
          #3. Little hack to avoid to try to dockerise gitolite-admin when we push on it.
          if user == 'gitolite-admin' and repo == 'git':
              return
          #4. Deploy the code.
          try:
              uid = None
              domain = None
              for message in farine.rpc.Client('cuisson', 120).post_receive(user, repo, branch, __stream__=True):
                  payload = json.loads(message)
                  print payload['status']
                  # 1. set uid
                  if payload['status'] == 'clone':
                      uid = payload['uid']['uid']
                  # 2. set domain
                  if payload['status'] == 'generate-dns':
                      domain = payload['context']['domain']
          except farine.exceptions.RPCError as exc:
              print 'Deployment failed. Check your configuration or contact us.'
          else:
              sleep = 60
              while sleep:
                  print 'Waiting the app to be running...'
                  time.sleep(5)
                  sleep = sleep - 5
                  try:
                      payload = farine.rpc.Client('defournement', 10).detail(user, uid)
                      payload['results'] = [json.loads(r) for r in payload['results']]
                  except farine.exceptions.RPCError as exc:
                      continue
                  if not payload['count']:
                      continue
                  if payload['results'][0]['status'] != 'running':
                      continue
                  print 'App running. You can access it using https://{}'.format(domain)
                  return True
              print 'App still not running after 1 min. Please wait more or contact us.'

      if __name__ == '__main__':
          os.environ['FARINE_INI'] = '/home/baguette/config/farine.ini'
          fc,tc,bn = sys.stdin.read().split()
          post_receive(fc, tc, bn)
